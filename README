# üõçÔ∏è E-Commerce Platform

Plataforma de comercio electr√≥nico construida con **Next.js 15.3.3"**, que incluye funcionalidades de autenticaci√≥n, gesti√≥n de productos y administraci√≥n b√°sica.

## üöÄ Tecnolog√≠as
- **Node** v22.13.1 
- **Npm** v10.9.2
- **Next.js** (App Router, Global Context)
- **Sequelize**, **MySQL** y **Express** (backend)
- **SweetAlert2** para notificaciones
- **CSS personalizado** (sin frameworks)
## üì¶ Funcionalidades

- Registro e inicio de sesi√≥n de usuarios
- Validaci√≥n de contrase√±as en el registro
- CRUD para productos (crear, editar, eliminar, listar)
- Subida de im√°genes con `longblob`
- Separaci√≥n de vistas de usuario y administrador
- Toasts personalizados para feedback de usuario
- Responsive b√°sico

## üõ†Ô∏è Instalaci√≥n

# 1. Clonar repositorio
git clone https://github.com/JulianPiedra/EcommerceProject.git

#Configuracion del backend
# 2. Instalar dependencias
cd EcommerceAPI
npm install

# 3. Configurar base de datos
# Crear un archivo .env con los siguientes valores en la carpeta EcommerceAPI:

DB_NAME=ecommerce_platform
DB_USER=root
DB_PASS=password
DB_HOST=localhost
DB_DIALECT=mysql
JWT_SECRET=Ecommerce_Api_Secret


# 4. Poblar la base de datos
# Opci√≥n A: Restaurar el archivo `ecommerce_platform.sql` que se encuentra en `EcommerceApi/Database/Script`
# Opci√≥n B: Ejecutar el script de seeds:

node Database/Seed/seed.js

# 5. Ejecutar el api 

nodemon index.js


#Configuracion de frontend
# 2. Instalar dependencias
cd EcommerceSite
npm install

# 3. Ejecutar el frontend
npm run dev

# 4. Ingresar al sistema con alguno de los 2 usuarios ya creados 
# Correo: admin@example.com, john@example.com 
# Contrase√±a: 123456






